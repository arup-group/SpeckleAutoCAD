name: Build solution and installer

on: 
  push:
    branches:
      - '*'
    tags-ignore:
      - '*.*'


jobs:
  buildSolution:
    name: Build Speckle AutoCAD plugin
    runs-on: windows-latest
    steps:
    - name: Calculate tag version
      id: calculateTagVersion
      run: |
        $tag = "1.0.0.$($env:GITHUB_RUN_NUMBER%65536)"
        echo "::set-output name=tag::$tag"
        
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'  

    - name: Install third party dependencies
      working-directory: SpeckleUiApp
      run: npm ci 
      
    - name: build Speckle UI App
      working-directory: SpeckleUiApp
      run: npm run build 
      
    - name: Install the latest version of nuget
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: 'latest'

    - name: Analytics CLI - Restore NuGets
      run: dotnet restore
      working-directory: Analytics

    - name: NuGet restore
      run: nuget restore SpeckleAutoCAD.sln
      
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Run msbuild command in Release
      run: msbuild speckleautocad.sln -restore -p:Configuration=Release57 -p:platform=x64

    - name: Analytics CLI - Compile CLI
      run: dotnet build --configuration Release --runtime win-x64
      working-directory: Analytics    

    - name: Decode PFX cert
      id: decodePfxCert
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_PFX_CERT }}")
        $certificatePath = Join-Path -Path $env:GITHUB_WORKSPACE\Installer -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        echo "::set-output name=pfxPath::$certificatePath"

    - name: Create installer
      run: iscc /DAppVersion="${{ steps.calculateTagVersion.outputs.tag }}" "/Ssigntool=C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x86\signtool.exe sign /f ""${{ steps.decodePfxCert.outputs.pfxPath }}"" /p ""${{ secrets.PFX_CERT_PASSWORD }}"" /t http://timestamp.comodoca.com $f" Installer/InstallerScript.iss
      shell: cmd
      env:
        ENABLE_TELEMETRY_DOMAIN: ${{ secrets.ENABLE_TELEMETRY_DOMAIN }}
    
    - name: Remove PFX cert
      run: Remove-Item -path "${{ steps.decodePfxCert.outputs.pfxPath }}"    
  
    - name: Upload build files
      uses: actions/upload-artifact@v2-preview
      with:
        name: SpeckleAutoCAD-${{ steps.calculateTagVersion.outputs.tag }}
        path: 'Installer/Build/SpeckleAutoCADInstaller.exe'
  
    - name: Create release
      if: github.ref == 'refs/heads/master'
      id: createRelease
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ steps.calculateTagVersion.outputs.tag }}
        release_name: Speckle AutoCAD Installer ${{ steps.calculateTagVersion.outputs.tag }} Alpha
        body: |
          Automated release of Speckle AutoCAD Installer
        draft: false
        prerelease: true

    - name: Upload Release Asset
      if: github.ref == 'refs/heads/master'
      id: uploadReleaseAsset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.createRelease.outputs.upload_url }}  
        asset_path: Installer/Build/SpeckleAutoCADInstaller.exe
        asset_name: SpeckleAutoCADInstaller.exe
        asset_content_type: application/vnd.microsoft.portable-executable
